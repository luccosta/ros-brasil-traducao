1
00:00:00,000 --> 00:00:08,700
bom primeiro queria agradecer

2
00:00:03,840 --> 00:00:11,880
pelo convite aí do pedro para mim assim

3
00:00:08,700 --> 00:00:14,700
é uma grande honra poder participar já

4
00:00:11,880 --> 00:00:18,090
que assim de alguma forma tô com pedro

5
00:00:14,700 --> 00:00:20,580
também desde o começo aí do canal e a

6
00:00:18,090 --> 00:00:22,140
gente lá no senai sempre vinha

7
00:00:20,580 --> 00:00:25,320
acompanhando esse esforço que o pedro

8
00:00:22,140 --> 00:00:27,689
junto com o baqueiro

9
00:00:25,320 --> 00:00:29,039
vinham fazendo né para levantar o grupo

10
00:00:27,689 --> 00:00:31,320
eu acho que é uma iniciativa muito

11
00:00:29,039 --> 00:00:33,450
bacana porque a gente cria referências

12
00:00:31,320 --> 00:00:36,600
assim do brasil dentro da comunidade

13
00:00:33,450 --> 00:00:39,300
do ROS que é uma comunidade muito

14
00:00:36,600 --> 00:00:41,460
grande que tem pessoas assim do mundo todo

15
00:00:39,300 --> 00:00:45,300
contribuindo pessoas diferentes níveis

16
00:00:41,460 --> 00:00:47,550
de instrução programadores excelentes

17
00:00:45,300 --> 00:00:50,550
então tive a oportunidade de estar no

18
00:00:47,550 --> 00:00:53,340
ROSCon em Madri em 2018 e para mim

19
00:00:50,550 --> 00:00:55,440
assim foi algo surpreendente porque

20
00:00:53,340 --> 00:00:58,590
tive até a felicidade de encontrar

21
00:00:55,440 --> 00:01:00,010
pessoas que mantinham os códigos que

22
00:00:58,590 --> 00:01:04,869
eu usava no senai então

23
00:01:00,010 --> 00:01:07,659
e foi um negócio bem bacana enfim quando

24
00:01:04,869 --> 00:01:10,750
pedro para sugeriu esse MeetUp

25
00:01:07,659 --> 00:01:13,659
eu já tinha de alguma forma

26
00:01:10,750 --> 00:01:16,119
esse esse tema em mente de como

27
00:01:13,659 --> 00:01:17,370
você batizar os elementos de aplicação

28
00:01:16,119 --> 00:01:20,390
em ROS

29
00:01:17,370 --> 00:01:23,640
então resolvi trazer mais como

30
00:01:20,390 --> 00:01:26,310
uma referência porque no ROS você

31
00:01:23,640 --> 00:01:28,320
tem uma documentação bem escrita sobre a

32
00:01:26,310 --> 00:01:30,750
parte do name conventions que são

33
00:01:28,320 --> 00:01:32,490
as convenções você que utiliza tanto

34
00:01:30,750 --> 00:01:36,210
para nomear os packeges pra nomear os

35
00:01:32,490 --> 00:01:38,640
nodes, os serviços que você venha a ter na

36
00:01:36,210 --> 00:01:41,730
sua aplicação e eu vou trazer um

37
00:01:38,640 --> 00:01:43,920
overview aqui bem rápido, a minha

38
00:01:41,730 --> 00:01:45,150
apresentação é baseada no ROS 1 então a

39
00:01:43,920 --> 00:01:49,010
maioria da minha experiência que eu

40
00:01:45,150 --> 00:01:52,020
tenho é no ROS 1 então ROS 1 ele ainda

41
00:01:49,010 --> 00:01:53,490
tá em produção né tipo você ainda tem

42
00:01:52,020 --> 00:01:55,650
o Noetic mesmo tendo o ROS 2

43
00:01:53,490 --> 00:02:00,150
você já tem algumas distribuições ainda

44
00:01:55,650 --> 00:02:02,370
que operam com bastante eficiência então

45
00:02:00,150 --> 00:02:05,240
você tem o Noetic que você tem o próprio

46
00:02:02,370 --> 00:02:09,929
o Kinetic que é bem utilizado ainda

47
00:02:05,240 --> 00:02:11,970
Lunar, Morenia então se até a Louise quiser

48
00:02:09,929 --> 00:02:13,430
as pessoas que também já estão

49
00:02:11,970 --> 00:02:15,840
mais à vontade com o ROS 2

50
00:02:13,430 --> 00:02:17,380
quiserem sugerir alguma coisa interferir

51
00:02:15,840 --> 00:02:22,600
vocês podem ficar à vontade

52
00:02:17,380 --> 00:02:26,620
então trouxe um pouco aqui do

53
00:02:22,600 --> 00:02:28,240
conteúdo, essa tirinha aí do Gilbert por

54
00:02:26,620 --> 00:02:30,070
mais que o Gilbert seja um

55
00:02:28,240 --> 00:02:31,480
profissional de TI tem bastante

56
00:02:30,070 --> 00:02:34,180
coisa que às vezes eu me

57
00:02:31,480 --> 00:02:35,590
identifico na área da programação então

58
00:02:34,180 --> 00:02:38,710
a tirinha basicamente eles estão ali

59
00:02:35,590 --> 00:02:43,030
definindo o naming convention né quais

60
00:02:38,710 --> 00:02:45,700
seriam os padrão adotado por eles

61
00:02:43,030 --> 00:02:47,800
geralmente a galera na programação gosta

62
00:02:45,700 --> 00:02:50,970
de criar casos bem específicos

63
00:02:47,800 --> 00:02:53,560
então a gente às vezes acaba perdendo

64
00:02:50,970 --> 00:02:55,390
muito tempo em reuniões assim não só

65
00:02:53,560 --> 00:02:58,390
naming conventions mais outras reuniões às

66
00:02:55,390 --> 00:03:00,460
vezes focando em alguns detalhes que às

67
00:02:58,390 --> 00:03:02,980
vezes para a maioria das pessoas não vai fazer

68
00:03:00,460 --> 00:03:06,460
tanta diferença, no caso aí eles foram

69
00:03:02,980 --> 00:03:08,710
bem fundo e acabaram decidindo

70
00:03:06,460 --> 00:03:11,080
terminar a reunião, mas assim geralmente

71
00:03:08,710 --> 00:03:14,800
as convenções de nomes não tem muitas

72
00:03:11,080 --> 00:03:17,360
regras, tem alguns estilos também que

73
00:03:14,800 --> 00:03:21,950
alguns projetos adotam como a Louise

74
00:03:17,360 --> 00:03:23,930
falou ali o ROS 2 adota um estilo, o gazebo

75
00:03:21,950 --> 00:03:26,480
provavelmente adota um estilo um pouco

76
00:03:23,930 --> 00:03:28,190
diferente e dependendo da empresa que

77
00:03:26,480 --> 00:03:30,170
você trabalha às vezes no projeto da

78
00:03:28,190 --> 00:03:34,340
universidade que você tá você pode

79
00:03:30,170 --> 00:03:36,350
também seguir um estilo que é um

80
00:03:34,340 --> 00:03:38,450
pouco diferente, então você também tem

81
00:03:36,350 --> 00:03:40,640
estilos públicos, tem o

82
00:03:38,450 --> 00:03:42,590
estilo do google para C++ é

83
00:03:40,640 --> 00:03:44,930
uma referência que quando eu

84
00:03:42,590 --> 00:03:48,680
estava começando eu sempre buscava

85
00:03:44,930 --> 00:03:51,520
seguir, enfim, vou apresentar alguns

86
00:03:48,680 --> 00:03:55,700
slides creio que vai ser coisa rápida

87
00:03:51,520 --> 00:03:58,430
vou começar aqui me apresentando meu

88
00:03:55,700 --> 00:04:01,520
nome é Matheus Santos tenho 26 anos me

89
00:03:58,430 --> 00:04:03,290
formei em controle e automação e desde

90
00:04:01,520 --> 00:04:05,360
quando eu entrei no senai venho

91
00:04:03,290 --> 00:04:08,680
trabalhando com essa área de programação

92
00:04:05,360 --> 00:04:12,739
um pouco mais para a área de perception

93
00:04:08,680 --> 00:04:15,170
que seria a forma como um robô interpreta

94
00:04:12,739 --> 00:04:17,370
e de alguma forma sente o ambiente ao

95
00:04:15,170 --> 00:04:19,769
redor então eu trouxe essas

96
00:04:17,370 --> 00:04:23,130
barrinhas, deixa eu explicar também

97
00:04:19,769 --> 00:04:27,990
porque do gráfico né a

98
00:04:23,130 --> 00:04:30,720
capa em si tem um negócio meio em formas de

99
00:04:27,990 --> 00:04:34,139
pixels então eu

100
00:04:30,720 --> 00:04:37,139
sou meio fanático, não fanática mas

101
00:04:34,139 --> 00:04:39,630
entusiasta da época lá dos 16 32 bits

102
00:04:37,139 --> 00:04:41,850
então eu tentei colocar apresentação

103
00:04:39,630 --> 00:04:43,080
mais do tipo, dentro das

104
00:04:41,850 --> 00:04:44,820
minhas áreas de interesse essas

105
00:04:43,080 --> 00:04:47,820
barrinhas meio que representam isso eu

106
00:04:44,820 --> 00:04:51,570
gosto bastante de trabalhar com

107
00:04:47,820 --> 00:04:55,320
OpenCV, gosto bastante também de

108
00:04:51,570 --> 00:04:57,030
C++ e hoje também tô tendo

109
00:04:55,320 --> 00:04:58,860
oportunidade de fazer um mestrado na

110
00:04:57,030 --> 00:05:02,060
área de inteligência artificial então

111
00:04:58,860 --> 00:05:04,710
são as áreas assim que mais me interessa.

112
00:05:02,060 --> 00:05:08,310
Aqui foi um pouco de onde eu passei

113
00:05:04,710 --> 00:05:11,570
então comecei a estudar em 2012 passei

114
00:05:08,310 --> 00:05:14,520
pelo Senai comecei o estágio lá em

115
00:05:11,570 --> 00:05:17,380
2016, 2018 terminei a graduação fui

116
00:05:14,520 --> 00:05:19,390
contratado, pude trabalhar num projeto

117
00:05:17,380 --> 00:05:22,450
bem legal na área de petróleo e

118
00:05:19,390 --> 00:05:25,090
gás que tinha como parceiros a Shell e a

119
00:05:22,450 --> 00:05:27,310
Innospection que é uma empresa alemã também

120
00:05:25,090 --> 00:05:31,650
em 2019 eu fui para a Oceaneering que é

121
00:05:27,310 --> 00:05:34,410
uma empresa também de petróleo e gás e que

122
00:05:31,650 --> 00:05:38,590
também tá na área da robótica, então

123
00:05:34,410 --> 00:05:40,720
algumas inovações assim que que a gente

124
00:05:38,590 --> 00:05:43,990
vê nessa corrida aí pelos ~Inaudível~

125
00:05:40,720 --> 00:05:49,480
a Oceaneering também tá

126
00:05:43,990 --> 00:05:51,160
participando disso, em 2019 eu entrei

127
00:05:49,480 --> 00:05:54,940
também no mestrado acadêmico na PUC

128
00:05:51,160 --> 00:05:58,660
no Rio de Janeiro voltado para sistemas

129
00:05:54,940 --> 00:06:00,910
robóticos, aprendizado, na verdade

130
00:05:58,660 --> 00:06:03,310
inteligência artificial aplicado a

131
00:06:00,910 --> 00:06:06,070
sistemas robóticos e inicialmente meu

132
00:06:03,310 --> 00:06:08,130
tema é relacionado ao autodocking, então

133
00:06:06,070 --> 00:06:11,980
você tem esses veículos submarinos

134
00:06:08,130 --> 00:06:14,800
geralmente são divididos entre autônomos

135
00:06:11,980 --> 00:06:18,879
e operados de forma remota

136
00:06:14,800 --> 00:06:21,520
e a minha ideia é desenvolver um

137
00:06:18,879 --> 00:06:23,919
algoritmo de autodocking baseado em

138
00:06:21,520 --> 00:06:25,870
sensores onboard que seriam sensores que

139
00:06:23,919 --> 00:06:28,120
que estão disponíveis no robô, são

140
00:06:25,870 --> 00:06:34,960
sensores locais que o robô pode

141
00:06:28,120 --> 00:06:37,599
contar, sonar sensores 3D, com laser

142
00:06:34,960 --> 00:06:44,139
scanner e também imagens 2d que seriam

143
00:06:37,599 --> 00:06:48,009
das câmeras, bom eu vou começar aqui meio

144
00:06:44,139 --> 00:06:49,750
assim abruptamente, mas trazendo um pouco

145
00:06:48,009 --> 00:06:52,389
da importância dos nomes, porque hoje

146
00:06:49,750 --> 00:06:54,789
em dia na programação a gente tem

147
00:06:52,389 --> 00:06:57,520
vários estilos, várias formas de

148
00:06:54,789 --> 00:06:59,229
você seguir, mas existe na verdade um

149
00:06:57,520 --> 00:07:02,169
senso comum assim né porque como você

150
00:06:59,229 --> 00:07:03,520
tem que batizar várias coisas enquanto

151
00:07:02,169 --> 00:07:05,860
você desenvolve né que são funções

152
00:07:03,520 --> 00:07:07,150
começa pelas variáveis começa por um

153
00:07:05,860 --> 00:07:10,930
nome de arquivo às vezes um nome de

154
00:07:07,150 --> 00:07:13,210
projeto então às vezes a gente fica com

155
00:07:10,930 --> 00:07:14,810
um pouco de dúvida em qual nome escolher

156
00:07:13,210 --> 00:07:19,730
então a gente tem classes

157
00:07:14,810 --> 00:07:23,930
numerações, alias, macros e typedefs.

158
00:07:19,730 --> 00:07:27,470
Galera mais antiga de c++, tem

159
00:07:23,930 --> 00:07:29,060
os próprios namespaces, os pacotes. Eu vou

160
00:07:27,470 --> 00:07:32,210
tentar trazer um pouco da importância

161
00:07:29,060 --> 00:07:34,430
de como isso influencia em um projeto

162
00:07:32,210 --> 00:07:37,010
um pouco maior. Então eu trouxe até essa

163
00:07:34,430 --> 00:07:40,340
charge que ela está naquele livro do

164
00:07:37,010 --> 00:07:42,139
uncle bob que é o Robert Martin que é um

165
00:07:40,340 --> 00:07:44,540
escritor bem conhecido na área de

166
00:07:42,139 --> 00:07:47,840
programação. Geralmente escreve sobre

167
00:07:44,540 --> 00:07:51,380
boas práticas, como você desenvolver

168
00:07:47,840 --> 00:07:56,480
uma aplicação que seja de fácil

169
00:07:51,380 --> 00:07:59,120
interpretação, que você venha promover

170
00:07:56,480 --> 00:08:00,680
o reaproveitamento de código de uma

171
00:07:59,120 --> 00:08:02,980
forma mais otimizada, um pouco mais

172
00:08:00,680 --> 00:08:06,320
otimizada. Essa centopéia às vezes

173
00:08:02,980 --> 00:08:08,030
representa os nomes que a gente acaba

174
00:08:06,320 --> 00:08:11,300
dando para os namespaces, nome de

175
00:08:08,030 --> 00:08:12,470
funções, por exemplo no java você

176
00:08:11,300 --> 00:08:14,150
chamar um print eu lembro quando eu

177
00:08:12,470 --> 00:08:16,970
comecei aprender java para você chamar

178
00:08:14,150 --> 00:08:18,230
um print na tela era uma extenção. Então

179
00:08:16,970 --> 00:08:21,280
geralmente você vai acessando os objetos

180
00:08:18,230 --> 00:08:24,080
com pontos, dependendo da linguagem

181
00:08:21,280 --> 00:08:27,380
você acaba formando uma centopeia.

182
00:08:24,080 --> 00:08:30,760
Às vezes até nisso a gente também

183
00:08:27,380 --> 00:08:30,760
tem que ter um pouco de preocupação.

184
00:08:30,840 --> 00:08:36,089
Então o nome ele representa a

185
00:08:34,200 --> 00:08:38,820
identidade de objeto então se você tá

186
00:08:36,089 --> 00:08:41,940
batizando uma api, se você tá

187
00:08:38,820 --> 00:08:43,860
batizando um nome de arquivo é

188
00:08:41,940 --> 00:08:45,390
provavelmente esse arquivo

189
00:08:43,860 --> 00:08:48,690
vai ser propaganda aí para muitos

190
00:08:45,390 --> 00:08:52,110
usuários e vai acabar sendo reproduzida.

191
00:08:48,690 --> 00:08:54,270
Então se você escolhe um nome que é

192
00:08:52,110 --> 00:08:56,670
intuitivo que as pessoas

193
00:08:54,270 --> 00:08:58,920
possam conseguir identificar de forma

194
00:08:56,670 --> 00:09:01,110
clara qual o intuito ali daquela

195
00:08:58,920 --> 00:09:03,120
api, daquele arquivo isso

196
00:09:01,110 --> 00:09:07,170
facilita. Porque na comunidade 

197
00:09:03,120 --> 00:09:09,420
open source o que a gente faz é pegar

198
00:09:07,170 --> 00:09:12,089
código já legado mas legado de outras

199
00:09:09,420 --> 00:09:16,290
pessoas, você editar, você tentar entender.

200
00:09:12,089 --> 00:09:18,690
Se você adota um estilo bom, nomes de

201
00:09:16,290 --> 00:09:20,040
variáveis legais, você facilita o

202
00:09:18,690 --> 00:09:22,620
trabalho de muitos. Eu vi que a Louise

203
00:09:20,040 --> 00:09:25,560
colocou ali nos comentários para a

204
00:09:22,620 --> 00:09:27,600
gente não tentar entender tudo. É

205
00:09:25,560 --> 00:09:29,839
basicamente isso se você tem uma feature

206
00:09:27,600 --> 00:09:30,850
para implementar, se você tem um issue para

207
00:09:29,839 --> 00:09:34,540
resolver

208
00:09:30,850 --> 00:09:36,490
e não precisa também entender tudo. Tenta

209
00:09:34,540 --> 00:09:38,620
se concentrar no escopo do que você

210
00:09:36,490 --> 00:09:42,040
quer. Eu tenho certeza que a nomenclatura

211
00:09:38,620 --> 00:09:43,779
utilizada vai te ajudar. Essa

212
00:09:42,040 --> 00:09:45,910
questão de você ser idiomático também

213
00:09:43,779 --> 00:09:49,149
dependendo da linguagem você já tem

214
00:09:45,910 --> 00:09:50,610
algumas formas de batizar variáveis

215
00:09:49,149 --> 00:09:52,750
pelo menos o estilo a se adotar.

216
00:09:50,610 --> 00:09:54,819
Geralmente quando você tem uma macro

217
00:09:52,750 --> 00:09:56,800
ou constante, você tem uma constante o pessoal gosta

218
00:09:54,819 --> 00:09:59,920
de ir por exemplo declarar a variável

219
00:09:56,800 --> 00:10:01,540
com todas as letras maiúsculas. Então se

220
00:09:59,920 --> 00:10:05,920
você bate o olho ali no meio do código

221
00:10:01,540 --> 00:10:09,310
você já sabe que uma constante. Setters

222
00:10:05,920 --> 00:10:11,920
e getters que seriam as interfaces de

223
00:10:09,310 --> 00:10:14,740
classes que geralmente o pessoal usa o

224
00:10:11,920 --> 00:10:16,990
set logo na frente. Agora estão

225
00:10:14,740 --> 00:10:18,730
mudando, ao invés de usar o get e o

226
00:10:16,990 --> 00:10:20,860
nome da variável, usa só o nome da variável.

227
00:10:18,730 --> 00:10:22,750
Mas são coisas assim que quando você

228
00:10:20,860 --> 00:10:28,120
bate o olho você já consegue identificar

229
00:10:22,750 --> 00:10:30,860
de cara. Geralmente quando você é

230
00:10:28,120 --> 00:10:32,810
um programador você acaba criando

231
00:10:30,860 --> 00:10:36,230
e as vezes eu falo por mim mesmo

232
00:10:32,810 --> 00:10:38,690
você cria uma certa identificação

233
00:10:36,230 --> 00:10:42,050
com as coisas que você cria. Então na

234
00:10:38,690 --> 00:10:45,470
hora do batismo você tenta dar o seu

235
00:10:42,050 --> 00:10:47,990
melhor. Analogia aqui é de uma dos

236
00:10:45,470 --> 00:10:50,630
pais, tentando batizar mais um filho

237
00:10:47,990 --> 00:10:52,280
mesmo ele já tendo passado pela por essa

238
00:10:50,630 --> 00:10:55,030
experiência várias vezes. Então ele já

239
00:10:52,280 --> 00:10:57,470
tem alguns filhos já passaram por isso e

240
00:10:55,030 --> 00:11:01,190
mesmo vindo mais um você acaba ainda

241
00:10:57,470 --> 00:11:04,670
tendo um pouco de preciosismo na

242
00:11:01,190 --> 00:11:06,950
hora de decidir o qual o

243
00:11:04,670 --> 00:11:09,560
nome você vai dar para suas

244
00:11:06,950 --> 00:11:11,360
criações. Então essa essa charge eu

245
00:11:09,560 --> 00:11:14,630
também tirei do código limpo lá do

246
00:11:11,360 --> 00:11:18,500
Robert Martin (Uncle Bob) como é mais comumente

247
00:11:14,630 --> 00:11:20,660
conhecido e o livro é bem legal. Durante

248
00:11:18,500 --> 00:11:24,960
os capítulos, você tem várias

249
00:11:20,660 --> 00:11:27,720
charges e inspira.

250
00:11:24,960 --> 00:11:34,350
Também tirei essas citações do

251
00:11:27,720 --> 00:11:36,660
próprio ros wiki e do ros reps, que são

252
00:11:34,350 --> 00:11:39,270
as referências que a gente tem no ros.

253
00:11:36,660 --> 00:11:43,830
Acredito que sejam válidas também para

254
00:11:39,270 --> 00:11:45,450
os ros2. Então no ros wiki, por exemplo os

255
00:11:43,830 --> 00:11:47,700
nomes desempenha um papel importante no

256
00:11:45,450 --> 00:11:49,110
ros e as convenções de nomenclatura a

257
00:11:47,700 --> 00:11:50,760
seguir simplifica o processo de

258
00:11:49,110 --> 00:11:53,460
aprendizado e entendimento de grande

259
00:11:50,760 --> 00:11:56,370
sistema. Então acho que o papel

260
00:11:53,460 --> 00:11:58,530
mais importante de uma boa nomenclatura

261
00:11:56,370 --> 00:12:00,180
é quando você, como eu já falei, mas quando

262
00:11:58,530 --> 00:12:02,490
você tem um sistema assim que é um pouco

263
00:12:00,180 --> 00:12:05,610
mais complexo que você tem vários

264
00:12:02,490 --> 00:12:07,260
componentes. Então o com mais eficiente

265
00:12:05,610 --> 00:12:09,900
você consegue ser na hora do batismo

266
00:12:07,260 --> 00:12:12,000
melhor na hora de você ou voltar daqui

267
00:12:09,900 --> 00:12:14,520
alguns anos e rever seu código ou então

268
00:12:12,000 --> 00:12:17,100
quando uma pessoa que nunca viu seu

269
00:12:14,520 --> 00:12:20,560
código for mexer conseguir entender.

270
00:12:17,100 --> 00:12:23,529
Então essa

271
00:12:20,560 --> 00:12:25,939
segunda citação aqui eu tirei do

272
00:12:23,529 --> 00:12:30,559
ros

273
00:12:25,939 --> 00:12:34,579
REPS que significa 

274
00:12:30,559 --> 00:12:36,649
ROS Enhancement Proposal, me corrijam se estiver

275
00:12:34,579 --> 00:12:39,109
errado. É uma página que você tem

276
00:12:36,649 --> 00:12:42,559
boas práticas desde o batismo de

277
00:12:39,109 --> 00:12:46,759
pacotes, de como você usar por exemplo uma

278
00:12:42,559 --> 00:12:49,009
referência um frame de referência em uma

279
00:12:46,759 --> 00:12:51,229
câmera, qual o eixo deve

280
00:12:49,009 --> 00:12:53,329
apontar para onde, qual o

281
00:12:51,229 --> 00:12:56,059
sistema de coordenadas você utilizar,

282
00:12:53,329 --> 00:12:57,470
como seu robô vai se comportar. Eu

283
00:12:56,059 --> 00:13:01,279
confesso que quando eu comecei a

284
00:12:57,470 --> 00:13:06,589
desenvolver para ros, não tinha

285
00:13:01,279 --> 00:13:09,949
ciência dos REPS e assim no ros questions

286
00:13:06,589 --> 00:13:12,979
eu vi a bastante gente referenciando o

287
00:13:09,949 --> 00:13:16,579
REPS e desde então eu sempre passei a

288
00:13:12,979 --> 00:13:17,989
consultar minhas dúvidas por lá e às

289
00:13:16,579 --> 00:13:20,510
vezes conseguia fazer algumas

290
00:13:17,989 --> 00:13:22,850
atualizações

291
00:13:20,510 --> 00:13:24,830
em algumas coisas que

292
00:13:22,850 --> 00:13:27,860
com o tempo às vezes ficando um pouco

293
00:13:24,830 --> 00:13:29,330
obsoleto e eu deixei as referências

294
00:13:27,860 --> 00:13:32,930
no final dos slides, então se vocês

295
00:13:29,330 --> 00:13:34,460
quiserem dar uma olhada, vale a pena.

296
00:13:32,930 --> 00:13:36,050
Então a medida aqui número de

297
00:13:34,460 --> 00:13:37,700
pacotes ros aumenta, fica difícil

298
00:13:36,050 --> 00:13:40,100
encontrar rapidamente um pacote e adivinhar

299
00:13:37,700 --> 00:13:42,140
a sua funcionalidade com base no

300
00:13:40,100 --> 00:13:45,830
nome.

301
00:13:42,140 --> 00:13:48,830
Uma forma de você medir.

302
00:13:45,830 --> 00:13:52,160
Outra charge. Na forma de você medir a

303
00:13:48,830 --> 00:13:53,840
qualidade de um código, varia desde a

304
00:13:52,160 --> 00:13:58,130
cobertura de testes

305
00:13:53,840 --> 00:14:01,070
unitários até quantidade de wtf por

306
00:13:58,130 --> 00:14:04,820
minuto. Reza a lenda que esse wtf aí

307
00:14:01,070 --> 00:14:08,110
significa "what is the failure" tanto que você

308
00:14:04,820 --> 00:14:10,730
tenta mesmo comando no ros que é ros wtf.

309
00:14:08,110 --> 00:14:12,710
Algumas dizem que significa outra coisa

310
00:14:10,730 --> 00:14:17,990
mas eu acredito que seja "what is the

311
00:14:12,710 --> 00:14:22,030
failure". Então como expliquei geralmente é

312
00:14:17,990 --> 00:14:25,370
comum você ter projetos complexos. Então

313
00:14:22,030 --> 00:14:29,350
eu trouxe esse

314
00:14:25,370 --> 00:14:33,279
print screen de uma aplicação né

315
00:14:29,350 --> 00:14:35,030
que você tem ali inúmeros nós, inúmeros

317
00:14:35,030 --> 00:14:40,280
tópicos, e muita gente publicando e tal

318
00:14:38,300 --> 00:14:44,090
e essa ferramenta do ROS, que é o ROS

319
00:14:40,280 --> 00:14:45,200
graph, ela permite você ter essa visão

320
00:14:44,090 --> 00:14:47,090
gráfica aí do que que tá acontecendo

321
00:14:45,200 --> 00:14:48,730
quem é que tá falando com quem, onde é

322
00:14:47,090 --> 00:14:52,040
que você tá publicando, quem é que tá

323
00:14:48,730 --> 00:14:53,630
escutando, entendeu, então geralmente você

324
00:14:52,040 --> 00:14:56,780
usa para debugar, então se você tem um

325
00:14:53,630 --> 00:14:58,730
emaranhado de coisas assim, pelo menos a

326
00:14:56,780 --> 00:15:01,400
representação no ROS graph num projeto

327
00:14:58,730 --> 00:15:03,110
complexo fica legal você ter referência

328
00:15:01,400 --> 00:15:04,700
dos nomes e você uma vez

329
00:15:03,110 --> 00:15:07,430
seguindo o padrão ali da nomenclatura

330
00:15:04,700 --> 00:15:09,110
você consegue distinguir de forma rápida

331
00:15:07,430 --> 00:15:11,570
o que é o que, e também evita conflitos

332
00:15:09,110 --> 00:15:14,390
né, quando você tem um projeto grande,

333
00:15:11,570 --> 00:15:17,060
as pessoas tendem, pelo menos para as

334
00:15:14,390 --> 00:15:20,210
coisas mais básicas assim, escolherem

335
00:15:17,060 --> 00:15:22,430
nomes que são comuns né, tipo para câmera,

336
00:15:20,210 --> 00:15:26,720
câmera info vai desde câmera info até

337
00:15:22,430 --> 00:15:30,250
cam info, então é comum você ter nomes

338
00:15:26,720 --> 00:15:33,940
iguais e aplicações diferentes

339
00:15:30,250 --> 00:15:37,970
eu vou falar um pouco de como é

340
00:15:33,940 --> 00:15:41,360
que o ROS organiza

341
00:15:37,970 --> 00:15:43,040
o ROS graph, o que é chamado

342
00:15:41,360 --> 00:15:44,750
de ROS graph names, como é que ele

343
00:15:43,040 --> 00:15:48,970
interpreta os nomes e como é que ele

344
00:15:44,750 --> 00:15:50,899
facilita a nossa vida na hora de você

345
00:15:48,970 --> 00:15:52,879
escolher um nome para seu tópico

346
00:15:50,899 --> 00:15:55,009
para o seu nó, para o seu serviço, e como é

347
00:15:52,879 --> 00:15:58,100
que ele faz para evitar o conflito

348
00:15:55,009 --> 00:16:01,970
dos nomes, e para você se organizar

349
00:15:58,100 --> 00:16:04,579
melhor, então nessa primeira

350
00:16:01,970 --> 00:16:08,839
linha você tem o node um, que seria

351
00:16:04,579 --> 00:16:11,620
um base name, lembrar né, base name

352
00:16:08,839 --> 00:16:14,600
relative name, global name, private name,

353
00:16:11,620 --> 00:16:16,519
e anonymous name, então nessa primeira

354
00:16:14,600 --> 00:16:19,759
coluna e linha um, você tem o node

355
00:16:16,519 --> 00:16:24,740
um, que seria o nome básico, o relative

356
00:16:19,759 --> 00:16:27,199
name seria o bar, então se você ver

357
00:16:24,740 --> 00:16:29,360
antes da seta você tem um bar sem

358
00:16:27,199 --> 00:16:31,069
barra, sem esse slash, então isso

359
00:16:29,360 --> 00:16:32,440
significa que você tá declarando um

360
00:16:31,069 --> 00:16:34,450
relative name

361
00:16:32,440 --> 00:16:36,310
e eu vou explicar melhor o que seria esse

362
00:16:34,450 --> 00:16:38,140
relative name, então no global se você

363
00:16:36,310 --> 00:16:40,030
vê do lado esquerdo, do lado esquerdo

364
00:16:38,140 --> 00:16:41,980
você tem como você declara e

365
00:16:40,030 --> 00:16:44,470
do lado direito como é que o ROS interpreta, do

366
00:16:41,980 --> 00:16:46,270
lado esquerdo você tem slash bar, então

367
00:16:44,470 --> 00:16:49,320
você utilizando o slash, você tá

368
00:16:46,270 --> 00:16:52,030
declarando um recurso global,

369
00:16:49,320 --> 00:16:54,730
então como é boa prática de software né,

370
00:16:52,030 --> 00:16:57,880
quanto mais recursos globais você evitar

371
00:16:54,730 --> 00:17:00,760
melhor, menos confusão você pode causar

372
00:16:57,880 --> 00:17:02,880
no futuro, e o private, se você vê ali,

373
00:17:00,760 --> 00:17:05,050
você tem o tilzinho do lado esquerdo,

374
00:17:02,880 --> 00:17:07,209
seria como você declara, e no lado

375
00:17:05,050 --> 00:17:10,390
direito você já tem a resolução do ROS,

376
00:17:07,209 --> 00:17:13,449
então como o base name lá na primeira

377
00:17:10,390 --> 00:17:16,000
coluna, tá vendo, node um, é o nome do

378
00:17:13,449 --> 00:17:18,100
seu nó, a característica do private é que

379
00:17:16,000 --> 00:17:21,490
tudo que for private o ROS resolve

380
00:17:18,100 --> 00:17:23,980
com o nome do nó, então como você tem

381
00:17:21,490 --> 00:17:26,680
ali node um no lugar do til ali você

382
00:17:23,980 --> 00:17:29,680
automaticamente adiciona o nome do

383
00:17:26,680 --> 00:17:32,230
nó ao nome do seu recurso, então se eu

384
00:17:29,680 --> 00:17:32,450
declaro no meu código, til bar, o ROS ele

385
00:17:32,230 --> 00:17:34,760
vai resolver

386
00:17:32,450 --> 00:17:37,909
isso para node um, que é o nome do meu

387
00:17:34,760 --> 00:17:40,159
nó, que é o meu base name barra bar,

388
00:17:37,909 --> 00:17:42,909
então você vai criar esse namespace aí,

389
00:17:40,159 --> 00:17:45,470
um tipo de namespace né, o node um,

390
00:17:42,909 --> 00:17:49,639
já na segunda, se alguém tiver alguma

391
00:17:45,470 --> 00:17:51,889
dúvida, pode falar porque às vezes você

392
00:17:49,639 --> 00:17:55,820
também não tem um contato com

393
00:17:51,889 --> 00:17:59,000
ROS, um certo contato né, fica difícil

394
00:17:55,820 --> 00:18:02,830
entender um pouco, mas se alguém tiver

395
00:17:59,000 --> 00:18:05,000
alguma dúvida ou então se resolver

396
00:18:02,830 --> 00:18:07,850
começar a desenvolver em ROS a partir de

397
00:18:05,000 --> 00:18:11,299
hoje, pode entrar em contato comigo, com o

398
00:18:07,850 --> 00:18:13,760
Pedro, tem os wikis na internet, tem o

399
00:18:11,299 --> 00:18:16,370
próprio ROS Questions, que aí vocês vão

400
00:18:13,760 --> 00:18:18,590
conseguir com certeza ter uma visão

401
00:18:16,370 --> 00:18:20,330
melhor do que eu tô falando, então na

402
00:18:18,590 --> 00:18:24,360
segunda linha, primeira coluna, você já

403
00:18:20,330 --> 00:18:29,850
tem ali um wg, wg seria

404
00:18:24,360 --> 00:18:32,580
um namespace, e node2, que seria o

405
00:18:29,850 --> 00:18:34,799
nome do nó que você quer lançar, então

406
00:18:32,580 --> 00:18:38,730
wg node2 acaba virando um base name,

407
00:18:34,799 --> 00:18:40,140
sendo que wg seria o seu namespace,

408
00:18:38,730 --> 00:18:41,309
então geralmente a gente utiliza namespace

409
00:18:40,140 --> 00:18:47,220
justamente por isso, para evitar

410
00:18:41,309 --> 00:18:49,679
conflitos, então usando o relative modo,

411
00:18:47,220 --> 00:18:53,160
você declararia um tópico por exemplo

412
00:18:49,679 --> 00:18:55,290
apenas com o nome bar, e aí o ROS

413
00:18:53,160 --> 00:18:58,740
interpreta a falta de um til e a falta

414
00:18:55,290 --> 00:19:01,919
de uma barra como sendo um elemento

415
00:18:58,740 --> 00:19:04,140
relativo então como é que o ROS iria

416
00:19:01,919 --> 00:19:07,140
resolver isso daí, ele ia colocar o

417
00:19:04,140 --> 00:19:09,000
namespace na frente do bar, então você

418
00:19:07,140 --> 00:19:13,559
evitaria conflito, então se alguém lá

419
00:19:09,000 --> 00:19:16,679
em outro projeto, em outra aplicação, criar

420
00:19:13,559 --> 00:19:18,270
um tópico com nome bar, seria muita

421
00:19:16,679 --> 00:19:24,150
coincidência lançar no mesmo namespace,

422
00:19:18,270 --> 00:19:24,340
mas já evita conflitos, então você

423
00:19:24,150 --> 00:19:27,070
teria pro global

424
00:19:24,340 --> 00:19:32,679
u, slash na frente, então não muda né,

425
00:19:27,070 --> 00:19:35,260
você teria slash bar, e o ROS resolveria para

426
00:19:32,679 --> 00:19:37,330
bar como global mesmo, já no private como

427
00:19:35,260 --> 00:19:38,860
eu falei, ele pegaria no lugar do til

428
00:19:37,330 --> 00:19:41,260
ali no lado esquerdo você declara por

429
00:19:38,860 --> 00:19:43,690
exemplo alguma coisa, num serviço é comum

430
00:19:41,260 --> 00:19:45,450
a gente declarar serviço como private

431
00:19:43,690 --> 00:19:48,669
porque geralmente um serviço

432
00:19:45,450 --> 00:19:50,260
pertence ao nó e não necessariamente o

433
00:19:48,669 --> 00:19:52,080
tópico pertence ao nó, porque um tópico é

434
00:19:50,260 --> 00:19:56,350
só a interface né, o meio ali de comunicação

435
00:19:52,080 --> 00:20:01,929
entre dois nós, então geralmente você

436
00:19:56,350 --> 00:20:04,330
usa os nomes dos serviços como

437
00:20:01,929 --> 00:20:06,850
private, porque é algo

438
00:20:04,330 --> 00:20:09,010
intrínseco ao nó, ele que fornece aquele

439
00:20:06,850 --> 00:20:12,190
serviço então você declararia o nome

440
00:20:09,010 --> 00:20:15,429
como til bar, e o ROS iria resolver

441
00:20:12,190 --> 00:20:18,230
isso para o nome base, que é wg node2,

442
00:20:15,429 --> 00:20:22,070
e o nome do recurso

443
00:20:18,230 --> 00:20:25,970
e por último você tem na terceira

444
00:20:22,070 --> 00:20:28,309
linha e primeira coluna, você tem o

445
00:20:25,970 --> 00:20:30,470
base name, que seria namespace e nome

446
00:20:28,309 --> 00:20:33,789
do nó, relative name agora você

447
00:20:30,470 --> 00:20:36,549
colocou, adicionou mais uma

448
00:20:33,789 --> 00:20:38,109
camada, assim vamos dizer, de nome,

449
00:20:36,549 --> 00:20:42,489
mais um namespace ali para tentar

450
00:20:38,109 --> 00:20:44,950
dificultar ainda mais os conflitos, ou

451
00:20:42,489 --> 00:20:47,229
então para tentar ser mais claro no que

452
00:20:44,950 --> 00:20:48,639
você tá querendo fazer né, então

453
00:20:47,229 --> 00:20:52,299
você também pode utilizar esse

454
00:20:48,639 --> 00:20:55,419
recurso para ser mais intuitivo, então

455
00:20:52,299 --> 00:20:57,639
você teria o foo bar ali declarado na

456
00:20:55,419 --> 00:20:59,409
esquerda como relative, então como

457
00:20:57,639 --> 00:21:01,720
você tem o namespace

458
00:20:59,409 --> 00:21:03,970
declarado, o ROS resolve isso daí com o

459
00:21:01,720 --> 00:21:06,820
namespaces e o relative name, que no caso

460
00:21:03,970 --> 00:21:09,070
seria wg para namespace, e foo slash

461
00:21:06,820 --> 00:21:11,289
bar para o nome que você tá

462
00:21:09,070 --> 00:21:13,960
declarando, global não muda se eu declarei

463
00:21:11,289 --> 00:21:17,200
foo bar com esse slash na frente,

464
00:21:13,960 --> 00:21:21,879
o ROS vai resolver para global, e no private

465
00:21:17,200 --> 00:21:24,460
você teria esse til, foo slash bar, e

466
00:21:21,879 --> 00:21:26,830
aí você completaria com o base name,

467
00:21:24,460 --> 00:21:30,159
lá na primeira coluna que

468
00:21:26,830 --> 00:21:32,519
seria wg node three, node três, slash

469
00:21:30,159 --> 00:21:34,529
foo bar

470
00:21:32,519 --> 00:21:37,080
e então como eu falei se vocês tiverem

471
00:21:34,529 --> 00:21:38,789
mais dúvidas como é que o ROS resolve

472
00:21:37,080 --> 00:21:40,409
essas questões vocês podem ou então

473
00:21:38,789 --> 00:21:44,179
rever essa gravação a gente vai

474
00:21:40,409 --> 00:21:47,399
disponibilizar lá no canal do youtube do

475
00:21:44,179 --> 00:21:49,499
do grupo então entrar em contato com a

476
00:21:47,399 --> 00:21:54,239
galera no ROS questions que costuma ser

477
00:21:49,499 --> 00:21:56,639
bem solícita você pode aumentar o seu

478
00:21:54,239 --> 00:21:59,909
karma aí respondendo perguntas tendo

479
00:21:56,639 --> 00:22:02,190
perguntas respondidas karma é uma

480
00:21:59,909 --> 00:22:06,029
pontuação na gamificação que o ROS

481
00:22:02,190 --> 00:22:08,249
questions tem e que geralmente virava

482
00:22:06,029 --> 00:22:10,759
até um tipo de piada lá no SENAI que vão

483
00:22:08,249 --> 00:22:13,499
aumentar meu karma, coisa do tipo

484
00:22:10,759 --> 00:22:19,570
aqui eu trouxe uma um exemplo de

485
00:22:13,499 --> 00:22:23,640
aplicação né você tem aí no centro

486
00:22:19,570 --> 00:22:23,640
vocês tão vendo meu curso aqui

487
00:22:26,130 --> 00:22:32,220
pronto então aqui você teria o aplication

488
00:22:29,520 --> 00:22:34,530
name node seria o nome do seu nó

489
00:22:32,220 --> 00:22:38,010
geralmente as aplicações tendem a manter

490
00:22:34,530 --> 00:22:40,920
o node aqui como forma de você também se

491
00:22:38,010 --> 00:22:44,430
localizar então você teria um namespace

492
00:22:40,920 --> 00:22:46,500
aqui associado a esse nó então como eu

493
00:22:44,430 --> 00:22:49,500
tô trabalhando dentro desse namespace

494
00:22:46,500 --> 00:22:52,290
os tópicos que esse nós lançar

495
00:22:49,500 --> 00:22:54,510
também vão estar dentro desses namespaces

496
00:22:52,290 --> 00:22:56,250
tá vendo e os serviços gerados também vão

497
00:22:54,510 --> 00:22:59,670
tá dentro desse namespace então como a

498
00:22:56,250 --> 00:23:01,020
gente pode ver como o base name no

499
00:22:59,670 --> 00:23:03,360
caso seria aqui o namespace

500
00:23:01,020 --> 00:23:05,790
application name node para os serviços

501
00:23:03,360 --> 00:23:08,190
que eu declarei de forma privada você

502
00:23:05,790 --> 00:23:10,320
mantém então intrinsic parameters

503
00:23:08,190 --> 00:23:12,810
seria declarado lá no meu código com um

504
00:23:10,320 --> 00:23:14,850
tilzinho entre os parameters e essa

505
00:23:12,810 --> 00:23:16,540
parte do namespace application name node

506
00:23:14,850 --> 00:23:18,760
o ROS resolveria

507
00:23:16,540 --> 00:23:20,740
então aqui você tem os parâmetros

508
00:23:18,760 --> 00:23:23,890
intrínsecos geralmente é comum você

509
00:23:20,740 --> 00:23:26,050
colocar um is_available para você checar

510
00:23:23,890 --> 00:23:29,050
uma forma de debug para você checar se algum

511
00:23:26,050 --> 00:23:31,990
componente alguma coisa está habilitado

512
00:23:29,050 --> 00:23:35,020
e você tem os comandos geralmente não é

513
00:23:31,990 --> 00:23:37,420
tão

514
00:23:35,020 --> 00:23:41,200
não é tão difundido assim na verdade

515
00:23:37,420 --> 00:23:43,000
não é tão aconselhável você usar a interface

516
00:23:41,200 --> 00:23:45,250
de serviço para comandos né geralmente

517
00:23:43,000 --> 00:23:47,560
você usar um action quem está mais

518
00:23:45,250 --> 00:23:49,360
familiarizado sabe que a diferença

519
00:23:47,560 --> 00:23:52,750
de um serviço para um action é que no

520
00:23:49,360 --> 00:23:55,900
action você consegue retornar o status

521
00:23:52,750 --> 00:23:58,700
daquela ação então no serviço você tem

522
00:23:55,900 --> 00:24:02,030
geralmente aí

523
00:23:58,700 --> 00:24:04,280
uma resposta síncrona né tipo do

524
00:24:02,030 --> 00:24:05,570
comando ele vai te retornar se conseguiu

525
00:24:04,280 --> 00:24:06,860
fazer ou não mas porém você não vai

526
00:24:05,570 --> 00:24:10,690
conseguir um status você não consegue

527
00:24:06,860 --> 00:24:13,640
impedir a execução desse serviço no meio

528
00:24:10,690 --> 00:24:15,590
no meio da ação que o sistema possa tá

529
00:24:13,640 --> 00:24:17,330
tomando e aqui no lado esquerdo tem uma

530
00:24:15,590 --> 00:24:19,840
pequena diferença você vê que você

531
00:24:17,330 --> 00:24:23,060
tem o namespace e só application name

532
00:24:19,840 --> 00:24:27,320
então você pode nos tópicos é comum

533
00:24:23,060 --> 00:24:30,380
você não associar o nome do nó às vezes

534
00:24:27,320 --> 00:24:32,240
no tópico por que como eu falei essa

535
00:24:30,380 --> 00:24:34,760
interface pode ser utilizada por outras

536
00:24:32,240 --> 00:24:37,370
por outros nós então fica mais fácil

537
00:24:34,760 --> 00:24:39,350
você usar nomes mais que sejam mais

538
00:24:37,370 --> 00:24:42,740
diretos mais intuitivos

539
00:24:39,350 --> 00:24:45,530
e aí você teria application name data

540
00:24:42,740 --> 00:24:48,320
info e is_available então escolhi nomes

541
00:24:45,530 --> 00:24:50,210
que são bem comuns porém como a gente se

542
00:24:48,320 --> 00:24:52,490
preparou aqui com os namespaces e com

543
00:24:50,210 --> 00:24:57,280
nomes que são sugestivos né a gente

544
00:24:52,490 --> 00:24:57,280
consegue identificar mais fácil

545
00:24:57,810 --> 00:25:02,010
por que que eu escolhi o

546
00:25:00,390 --> 00:25:04,320
título dessa seção como escolha

547
00:25:02,010 --> 00:25:05,700
bem os seus padrinhos é mais dessas

548
00:25:04,320 --> 00:25:07,890
referências né escolha bem as suas

549
00:25:05,700 --> 00:25:10,110
referências porque geralmente quando

550
00:25:07,890 --> 00:25:11,730
você vai batizar uma criança uma coisa

551
00:25:10,110 --> 00:25:14,820
os padrinhos costumam dar uns pitacos

552
00:25:11,730 --> 00:25:19,290
ali né então os nossos padrinhos no

553
00:25:14,820 --> 00:25:22,020
caso seriam o ROS Wiki, ROS

554
00:25:19,290 --> 00:25:29,160
Questions para as dúvidas mais pontuais nos

555
00:25:22,020 --> 00:25:33,120
próprios REPs do ROS enfim

556
00:25:29,160 --> 00:25:36,300
trouxe aqui esse ROS REP 144 né que

557
00:25:33,120 --> 00:25:39,750
ele tá relacionado a como você batizar

558
00:25:36,300 --> 00:25:41,370
um package então ele te dá ali as

559
00:25:39,750 --> 00:25:43,950
convenções né porque geralmente a pessoa

560
00:25:41,370 --> 00:25:46,860
usa para fazer tal coisa e aqui também

561
00:25:43,950 --> 00:25:50,130
tem a questão dos names essa parte

562
00:25:46,860 --> 00:25:52,020
aqui eu tirei como é que o ROS ele

563
00:25:50,130 --> 00:25:55,770
resolve

564
00:25:52,020 --> 00:25:58,410
global names relative names tá bem

565
00:25:55,770 --> 00:26:01,410
detalhado nesse link então vocês vão se

566
00:25:58,410 --> 00:26:02,700
sentir lá à vontade tenho certeza então as

567
00:26:01,410 --> 00:26:04,890
principais vantagens né como eu já

568
00:26:02,700 --> 00:26:07,410
venho dizendo, reuso de código, encapsulamento

569
00:26:04,890 --> 00:26:09,390
debug, evita o próprio conflito entre

570
00:26:07,410 --> 00:26:10,890
nomes e facilita a descrição dos

571
00:26:09,390 --> 00:26:13,620
componentes e o namespace. Você pode

572
00:26:10,890 --> 00:26:15,510
fazer uso do namespace para fornecer

573
00:26:13,620 --> 00:26:18,870
uma descrição melhor ali da sua

574
00:26:15,510 --> 00:26:20,870
aplicação do que que aquele recurso é

575
00:26:18,870 --> 00:26:23,370
responsável, do que que aquele serviço é

576
00:26:20,870 --> 00:26:26,480
responsável, do que que aquele tópico é

577
00:26:23,370 --> 00:26:28,610
responsável, coisas do tipo

578
00:26:26,480 --> 00:26:30,260
então eu trouxe aqui um exemplo de

579
00:26:28,610 --> 00:26:32,000
um projeto, que é do Dynamixel

580
00:26:30,260 --> 00:26:33,740
que são motores que são bem

581
00:26:32,000 --> 00:26:35,990
utilizados, bem fundidos aí na

582
00:26:33,740 --> 00:26:37,330
comunidade robótica, são servo-motores

583
00:26:35,990 --> 00:26:39,580
inteligentes

584
00:26:37,330 --> 00:26:41,590
então você vê que tem uma certa

585
00:26:39,580 --> 00:26:45,220
estrutura ali né, tilt controller command

586
00:26:41,590 --> 00:26:47,380
então o command seria o nome de um

587
00:26:45,220 --> 00:26:49,750
tópico se você só utilizasse o command

588
00:26:47,380 --> 00:26:51,760
seria o nome de tópico comum, state

589
00:26:49,750 --> 00:26:54,790
então você sabe que o tilt ali é o

590
00:26:51,760 --> 00:26:56,350
controlador do motor responsável pelo

591
00:26:54,790 --> 00:26:58,800
tilt, geralmente temo o pan e o tilt

592
00:26:56,350 --> 00:27:01,810
que são aqueles movimentos que a gente tem em

593
00:26:58,800 --> 00:27:06,100
retrovisores, mas vocês estão vendo, então

594
00:27:01,810 --> 00:27:09,130
geralmente você tem essa

595
00:27:06,100 --> 00:27:10,930
diferença aíi, e tem próprio diagnostics

596
00:27:09,130 --> 00:27:14,260
que também é um stack do ROS muito

597
00:27:10,930 --> 00:27:15,270
interessante, a gente pode até marcar

598
00:27:14,260 --> 00:27:18,570
outro

599
00:27:15,270 --> 00:27:22,340
outro momento para discutir sobre que

600
00:27:18,570 --> 00:27:24,250
é algo que facilita bastante um projeto

602
00:27:24,250 --> 00:27:28,750
aí aqui eu trouxe mais ou menos como é

603
00:27:26,290 --> 00:27:31,150
que seria o ROS service list no

604
00:27:28,750 --> 00:27:34,960
terminal, então você teria o nome do

605
00:27:31,150 --> 00:27:36,700
nó ali, dxl manager meta, então

606
00:27:34,960 --> 00:27:40,060
você tem o start controller, start

607
00:27:36,700 --> 00:27:43,300
controller, você tem o dxl

608
00:27:40,060 --> 00:27:44,770
manager pan tilt, então teria o start

609
00:27:43,300 --> 00:27:48,720
controller, start controller, então

610
00:27:44,770 --> 00:27:51,340
são nomes que são comuns mais pelo

611
00:27:48,720 --> 00:27:53,680
conteúdo todo, pelos namespaces

612
00:27:51,340 --> 00:27:57,360
que você criou você consegue de cara ver

613
00:27:53,680 --> 00:28:01,740
o que que aquele serviço faz

614
00:27:57,360 --> 00:28:04,470
outro projeto também que eu acho bem

615
00:28:01,740 --> 00:28:07,380
interessante nessa parte de padrão de

616
00:28:04,470 --> 00:28:09,510
projeto é o Velodyne. O Velodyne pra

617
00:28:07,380 --> 00:28:14,820
quem não sabe é um laser scanner, que

618
00:28:09,510 --> 00:28:18,299
geralmente tem 16, 32 feixes, 64 também, feixes

619
00:28:14,820 --> 00:28:21,639
de laser que você consegue mapear o seu

620
00:28:18,299 --> 00:28:26,289
ambiente 360 graus

621
00:28:21,639 --> 00:28:31,659
de forma a ele te dar uma nuvem

622
00:28:26,289 --> 00:28:34,809
de pontos 3D, então é um pacote

623
00:28:31,659 --> 00:28:38,619
complexo, porém a organização do pacote

624
00:28:34,809 --> 00:28:41,320
te dá um pouco mais de segurança na hora

625
00:28:38,619 --> 00:28:44,320
de tentar entender como é que é o behaviour

626
00:28:41,320 --> 00:28:46,929
daquele... da aplicação em si

627
00:28:44,320 --> 00:28:51,779
então ele separa ali as aplicações e nodelets

628
00:28:46,929 --> 00:28:54,489
tem um manager que consegue

629
00:28:51,779 --> 00:28:57,099
conversar com esses nodelets você tem ali os

630
00:28:54,489 --> 00:29:00,579
packets, os points e o diagnostics como

631
00:28:57,099 --> 00:29:03,009
eu falei e ainda tem esse diagnostic aggregator

632
00:29:00,579 --> 00:29:06,549
aqui que faz parte da pilha do

633
00:29:03,009 --> 00:29:08,619
diagnostics stack que ele só mostra de

634
00:29:06,549 --> 00:29:10,509
forma organizada qual é o diagnóstico do

635
00:29:08,619 --> 00:29:13,119
seu sistema se você atingir uma

636
00:29:10,509 --> 00:29:15,879
temperatura crítica se você teve falha

637
00:29:13,119 --> 00:29:18,630
no motor teve falha em um dos lasers ele

638
00:29:15,879 --> 00:29:23,790
te dá essas coisas aí

639
00:29:18,630 --> 00:29:26,400
bom cheguei ao fim foi muito

640
00:29:23,790 --> 00:29:30,660
apressado antes disso eu queria como a

641
00:29:26,400 --> 00:29:33,360
ideia é sempre tá incentivando as

642
00:29:30,660 --> 00:29:35,490
pessoas que estão começando né batizei

643
00:29:33,360 --> 00:29:37,530
essas minhas dicas aqui como saga do

644
00:29:35,490 --> 00:29:39,290
herói então geralmente as pessoas que

645
00:29:37,530 --> 00:29:42,630
costumam investigar um pouco mais sobre

646
00:29:39,290 --> 00:29:44,780
filmes sabe que a saga do herói

647
00:29:42,630 --> 00:29:47,940
geralmente o herói começa se ferrando

648
00:29:44,780 --> 00:29:51,600
passa por umas dificuldades aí depois no

649
00:29:47,940 --> 00:29:53,250
final as coisas dão certo eu acho que na

650
00:29:51,600 --> 00:29:55,650
minha vida de programador a cada

651
00:29:53,250 --> 00:29:58,320
problema novo que eu pego é uma saga do

652
00:29:55,650 --> 00:30:00,660
herói nova e na minha mente eu sempre

653
00:29:58,320 --> 00:30:03,960
tenho às vezes essa clareza de que

654
00:30:00,660 --> 00:30:05,640
tudo vai dar certo vou conseguir não

655
00:30:03,960 --> 00:30:07,980
sozinho mas com ajuda dos outros ajuda

656
00:30:05,640 --> 00:30:11,070
dos companheiros seja na empresa

657
00:30:07,980 --> 00:30:13,050
eu sempre tenho graças a deus sempre tive

658
00:30:11,070 --> 00:30:16,320
bons companheiros de trabalho

659
00:30:13,050 --> 00:30:17,940
hoje na Oceaneering também tenho dois

660
00:30:16,320 --> 00:30:18,610
colegas assim mais próximos que sempre

661
00:30:17,940 --> 00:30:22,179
me ajudam então

662
00:30:18,610 --> 00:30:23,860
eu não tenho... claro não conheço

663
00:30:22,179 --> 00:30:26,320
tudo não sei se é pouca coisa de

664
00:30:23,860 --> 00:30:28,240
programação apesar dos anos que eu venho já

665
00:30:26,320 --> 00:30:30,070
trabalhando com isso mas assim eu trouxe

666
00:30:28,240 --> 00:30:33,520
algumas dicas né que eu acho que para

667
00:30:30,070 --> 00:30:37,810
você se tornar um programador assim

668
00:30:33,520 --> 00:30:39,610
é mais mais atento né às coisas que

669
00:30:37,810 --> 00:30:41,590
acontecem na comunidade seria

670
00:30:39,610 --> 00:30:44,080
interessante você ter esse domínio

671
00:30:41,590 --> 00:30:46,270
o conhecimento dessas

672
00:30:44,080 --> 00:30:50,230
ferramentas dessas técnicas primeiro é o

673
00:30:46,270 --> 00:30:52,740
Qt eu acho que o Qt por ser uma

674
00:30:50,230 --> 00:30:56,800
ferramenta assim de renderização

675
00:30:52,740 --> 00:31:00,460
open source bastante difundida é algo

676
00:30:56,800 --> 00:31:02,950
que seria legal vocês darem uma olhada

677
00:31:00,460 --> 00:31:05,050
para quem está começando então para quem

678
00:31:02,950 --> 00:31:07,930
tá já tem um pouco uma certa experiência

679
00:31:05,050 --> 00:31:11,530
para se aprofundar mais meu caso também

680
00:31:07,930 --> 00:31:14,070
eu tenho que estudar Qt sempre porque é

681
00:31:11,530 --> 00:31:17,470
algo que a gente utiliza bastante na Oceaneering

682
00:31:14,070 --> 00:31:19,120
para C++ né o Qt em si

683
00:31:17,470 --> 00:31:21,090
ele foi desenvolvido originalmente em

684
00:31:19,120 --> 00:31:24,510
C++ mas você tem os bindings ali

685
00:31:21,090 --> 00:31:27,930
como a Louise falou você tem o SWIG

686
00:31:24,510 --> 00:31:30,190
você tem outros bindings que conseguem

687
00:31:27,930 --> 00:31:33,530
fornecer o que tem outras

688
00:31:30,190 --> 00:31:36,380
linguagens então estudar design patterns

689
00:31:33,530 --> 00:31:39,530
é legal porque você também consegue

690
00:31:36,380 --> 00:31:41,180
bater o olho ali no algoritmo e saber o

691
00:31:39,530 --> 00:31:44,300
que tá acontecendo mais ou menos

692
00:31:41,180 --> 00:31:46,460
ainda tenho essa ideia prévia utilizar

693
00:31:44,300 --> 00:31:48,110
bastante C++ 14, o C++

694
00:31:46,460 --> 00:31:50,600
a linguagem muito peculiar então você

695
00:31:48,110 --> 00:31:54,740
tem a base 98 você tem C++ 11

696
00:31:50,600 --> 00:31:56,890
você tem o 14 você tem 17 o 20 nem

697
00:31:54,740 --> 00:32:01,490
sei se o 20 já lançou mas enfim

698
00:31:56,890 --> 00:32:05,570
pelo menos minha dica seria se atentar

699
00:32:01,490 --> 00:32:09,110
ao C++ 14 que é a linguagem

700
00:32:05,570 --> 00:32:12,440
que o ROS tá baseado

701
00:32:09,110 --> 00:32:14,300
pelo menos eu vi ali naquele link que

702
00:32:12,440 --> 00:32:16,610
a Louise compartilhou com a gente

703
00:32:14,300 --> 00:32:19,730
tem lá o estilo e eles falam sobre o

704
00:32:16,610 --> 00:32:21,200
C++ 14 mas seria legal a

705
00:32:19,730 --> 00:32:24,320
galera se aprofundar mais porque em

706
00:32:21,200 --> 00:32:28,010
relação ao 11 e ao 98 você tem

707
00:32:24,320 --> 00:32:31,040
bastante funcionalidades que seriam

708
00:32:28,010 --> 00:32:32,330
interessantes de ser absorvidas você tem ali

709
00:32:31,040 --> 00:32:33,510
aquela parte mais eu coloquei um

710
00:32:32,330 --> 00:32:37,250
quebra-cabeça que seria mais a parte de

711
00:32:33,510 --> 00:32:39,720
comunicação entre os elementos de

712
00:32:37,250 --> 00:32:42,570
uma aplicação robótica que seria o

713
00:32:39,720 --> 00:32:44,910
próprio middleware e o ROS nesse caso

714
00:32:42,570 --> 00:32:47,160
facilita para gente já a ferramenta mas

715
00:32:44,910 --> 00:32:52,580
existem outros frameworks de robótica que

716
00:32:47,160 --> 00:32:55,830
utilizam RTPS outras formas de conectar

717
00:32:52,580 --> 00:32:58,020
as diferentes camadas você também tá um

718
00:32:55,830 --> 00:33:00,480
pouco mais atualizado com os design

719
00:32:58,020 --> 00:33:03,120
patterns utilizados na hora de você fazer

720
00:33:00,480 --> 00:33:05,370
um parser na hora de você decodificar uma

721
00:33:03,120 --> 00:33:10,020
mensagem na hora de você codificar uma

722
00:33:05,370 --> 00:33:13,380
mensagem essa parte aí da qualidade

723
00:33:10,020 --> 00:33:14,790
de software né você tá ali por

724
00:33:13,380 --> 00:33:17,340
dentro do que um CI e um CD faz

725
00:33:14,790 --> 00:33:20,400
como o Pedro falou o CI é essa

726
00:33:17,340 --> 00:33:23,190
parte de integração contínua e CD seria

727
00:33:20,400 --> 00:33:25,020
a parte de desenvolvimento contínuo

728
00:33:23,190 --> 00:33:26,160
produção continua o Jenkins é uma

729
00:33:25,020 --> 00:33:29,970
ferramenta que a gente utiliza para

730
00:33:26,160 --> 00:33:31,350
fazer essas coisas de testar o seu build

731
00:33:29,970 --> 00:33:33,520
o seu sistema de forma automática

732
00:33:31,350 --> 00:33:35,980
também RedMine e Jira geralmente

733
00:33:33,520 --> 00:33:38,710
são ferramentas bem utilizadas nas empresas

734
00:33:35,980 --> 00:33:42,370
para você fazer acompanhamento

735
00:33:38,710 --> 00:33:45,280
da sua metodologia agile também se

736
00:33:42,370 --> 00:33:47,980
aprofundar um pouco mais nessa parte dos

737
00:33:45,280 --> 00:33:51,670
scripts tem um pouco de conhecimento do

738
00:33:47,980 --> 00:33:54,580
low-level e também tá ali a parte dos

739
00:33:51,670 --> 00:33:56,530
protocolos e dos parsers ali um pouco do

740
00:33:54,580 --> 00:33:58,630
estilo que a galera que é low-level

741
00:33:56,530 --> 00:34:00,250
costuma utilizar bastante eu me

742
00:33:58,630 --> 00:34:02,080
considero um cara mais high-level

743
00:34:00,250 --> 00:34:04,840
e geralmente quando eu pego esses scripts

744
00:34:02,080 --> 00:34:07,360
aí eu apanho bastante mas sempre que eu

745
00:34:04,840 --> 00:34:10,360
posso eu tento pesquisar e aprender um

746
00:34:07,360 --> 00:34:12,520
pouco mais aí enfim essas são as formas

747
00:34:10,360 --> 00:34:15,580
de vocês me acharem tem o meu LinkedIn

748
00:34:12,520 --> 00:34:17,470
tem o meu GitHub esse blog eu acabei

749
00:34:15,580 --> 00:34:19,390
desativando tô fazendo aí uma

750
00:34:17,470 --> 00:34:22,240
reformulação durante a quarentena um

751
00:34:19,390 --> 00:34:24,730
pouco mais de tempo então minha irmã também

752
00:34:22,240 --> 00:34:27,250
ela escreve algumas coisas vou colocar

753
00:34:24,730 --> 00:34:30,460
um conteúdo dela a idéia é que não seja só

754
00:34:27,250 --> 00:34:32,270
robótica mas que seja sei lá uma forma

755
00:34:30,460 --> 00:34:35,270
de você devagar sobre a vida

756
00:34:32,270 --> 00:34:38,030
e se vocês quiseram em breve eu vou

757
00:34:35,270 --> 00:34:40,490
disponibilizar lá o blog tá bom então

758
00:34:38,030 --> 00:34:42,169
obrigado agradeço aí a atenção de vocês

759
00:34:40,490 --> 00:34:44,510
a paciência espero que tenha ajudado né

760
00:34:42,169 --> 00:34:46,850
e como eu disse era uma forma só

761
00:34:44,510 --> 00:34:50,409
introdutória de pelo menos mostrar a

762
00:34:46,850 --> 00:34:52,970
importância de você escolher um bom nome

763
00:34:50,409 --> 00:34:54,530
tem o código limpo que eu falei já do

764
00:34:52,970 --> 00:34:56,690
Robert Martin e tem esse livro aqui

765
00:34:54,530 --> 00:35:02,450
também que é como ser um programador

766
00:34:56,690 --> 00:35:05,960
melhor do Pete Goodliffe então

767
00:35:02,450 --> 00:35:07,640
eu sempre que

768
00:35:05,960 --> 00:35:09,380
posso eu faço a leitura dos dois mas

769
00:35:07,640 --> 00:35:14,300
assim acaba sendo uma leitura mais de

770
00:35:09,380 --> 00:35:15,800
passar tempo né também não fico

771
00:35:14,300 --> 00:35:17,870
não é algo que eu encare como

772
00:35:15,800 --> 00:35:20,210
uma prioridade realmente na programação

773
00:35:17,870 --> 00:35:22,220
na saga como eu falei da saga do herói e

774
00:35:20,210 --> 00:35:25,010
você acaba se ferrando entre aspas um

775
00:35:22,220 --> 00:35:27,980
pouco tendo ali uma curva de aprendizado

776
00:35:25,010 --> 00:35:30,530
mas com certeza a sensação de você ver

777
00:35:27,980 --> 00:35:32,280
uma criação sua um filho seu tendo

778
00:35:30,530 --> 00:35:37,080
sucesso na vida pelos sucessos aí

779
00:35:32,280 --> 00:35:39,660
no desempenho é muito legal tá bom então

780
00:35:37,080 --> 00:35:42,500
tem as referências que utilizei muito

781
00:35:39,660 --> 00:35:42,500
obrigado aí viu galera

